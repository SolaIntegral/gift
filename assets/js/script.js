// „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÁä∂ÊÖãÁÆ°ÁêÜ
window.appState = window.appState || {
  currentScreen: "home",
  currentQuestion: 0,
  answers: {},
  selectedGift: null,
  recipientInfo: {},
  giftId: null,
  selectedPaymentMethod: null,
}

// Ë≥™Âïè„Éá„Éº„Çø
const questions = [
  {
    id: "age",
    title: "Ë¥à„ÇãÁõ∏Êâã„ÅØ„Å©„Çì„Å™Êñπ„Åß„Åô„ÅãÔºü",
    options: [
      { value: "20s", label: "20‰ª£„ÅÆÊñπ", icon: "üë©" },
      { value: "30s", label: "30‰ª£„ÅÆÊñπ", icon: "üë®" },
      { value: "40s", label: "40‰ª£„ÅÆÊñπ", icon: "üë©‚Äçüíº" },
      { value: "50s", label: "50‰ª£„ÅÆÊñπ", icon: "üë®‚Äçüíº" },
      { value: "60plus", label: "60‰ª£‰ª•‰∏ä„ÅÆÊñπ", icon: "üë¥" },
    ],
  },
  {
    id: "budget",
    title: "„Åî‰∫àÁÆó„ÅØ„Å©„ÅÆ„Åè„Çâ„ÅÑ„Çí„ÅäËÄÉ„Åà„Åß„Åô„ÅãÔºü",
    options: [
      { value: "low", label: "5,000ÂÜÜ„Äú10,000ÂÜÜ", icon: "üí∞" },
      { value: "medium", label: "10,000ÂÜÜ„Äú20,000ÂÜÜ", icon: "üíé" },
      { value: "high", label: "20,000ÂÜÜ„Äú30,000ÂÜÜ", icon: "üëë" },
      { value: "premium", label: "30,000ÂÜÜ‰ª•‰∏ä", icon: "‚ú®" },
    ],
  },
  {
    id: "concern",
    title: "ÂÅ•Â∫∑„Å´„Å§„ÅÑ„Å¶„ÄÅÁâπ„Å´Ê∞ó„Å´„Å™„Çã„Åì„Å®„ÅØ„ÅÇ„Çä„Åæ„Åô„ÅãÔºüÔºà‰ªªÊÑèÔºâ",
    options: [
      { value: "general", label: "ÂÖ®Ëà¨ÁöÑ„Å™ÂÅ•Â∫∑„ÉÅ„Çß„ÉÉ„ÇØ", icon: "üè•" },
      { value: "lifestyle", label: "ÁîüÊ¥ªÁøíÊÖ£ÁóÖ„ÅÆ‰∫àÈò≤", icon: "üçé" },
      { value: "fitness", label: "ÈÅãÂãï„Éª„Éï„Ç£„ÉÉ„Éà„Éç„Çπ", icon: "üí™" },
      { value: "mental", label: "„Çπ„Éà„É¨„Çπ„Éª„É°„É≥„Çø„É´„Éò„É´„Çπ", icon: "üßò" },
      { value: "none", label: "Áâπ„Å´„Å™„Åó", icon: "üòä" },
    ],
  },
]

// „ÇÆ„Éï„Éà„Éá„Éº„Çø
const giftOptions = {
  low: [
    {
      id: "basic-checkup",
      title: "Âü∫Êú¨ÂÅ•Â∫∑Ë®∫Êñ≠„Éë„ÉÉ„ÇØ",
      description: "Ë°ÄÊ∂≤Ê§úÊüª„ÄÅË°ÄÂúßÊ∏¨ÂÆö„ÄÅBMIÊ∏¨ÂÆö„Å™„Å©Âü∫Êú¨ÁöÑ„Å™ÂÅ•Â∫∑„ÉÅ„Çß„ÉÉ„ÇØ„Åå„Åß„Åç„Çã„Éë„ÉÉ„Ç±„Éº„Ç∏„Åß„Åô„ÄÇ",
      price: "8,800ÂÜÜ",
      features: ["Ë°ÄÊ∂≤Ê§úÊüªÔºàÂü∫Êú¨È†ÖÁõÆÔºâ", "Ë°ÄÂúß„ÉªBMIÊ∏¨ÂÆö", "ÂÅ•Â∫∑Áõ∏Ë´áÔºà30ÂàÜÔºâ", "ÁµêÊûú„É¨„Éù„Éº„Éà"],
      popular: false,
    },
    {
      id: "wellness-consultation",
      title: "„Ç¶„Çß„É´„Éç„ÇπÁõ∏Ë´á„Çª„ÉÉ„Ç∑„Éß„É≥",
      description: "Â∞ÇÈñÄ„Ç´„Ç¶„É≥„Çª„É©„Éº„Å´„Çà„ÇãÂÅ•Â∫∑„ÉªÁîüÊ¥ªÁøíÊÖ£„ÅÆÂÄãÂà•Áõ∏Ë´á„Çª„ÉÉ„Ç∑„Éß„É≥„Åß„Åô„ÄÇ",
      price: "6,600ÂÜÜ",
      features: ["ÂÄãÂà•Áõ∏Ë´áÔºà60ÂàÜÔºâ", "ÁîüÊ¥ªÁøíÊÖ£„Ç¢„Éâ„Éê„Ç§„Çπ", "„Éï„Ç©„É≠„Éº„Ç¢„ÉÉ„Éó„É°„Éº„É´", "ÂÅ•Â∫∑„Éó„É©„É≥‰ΩúÊàê"],
      popular: true,
    },
  ],
  medium: [
    {
      id: "comprehensive-checkup",
      title: "Á∑èÂêàÂÅ•Â∫∑Ë®∫Êñ≠„Éë„ÉÉ„ÇØ",
      description: "Ë©≥Á¥∞„Å™Ë°ÄÊ∂≤Ê§úÊüª„Åã„ÇâÁîªÂÉèË®∫Êñ≠„Åæ„Åß„ÄÅÁ∑èÂêàÁöÑ„Å™ÂÅ•Â∫∑Áä∂ÊÖã„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åß„Åç„Åæ„Åô„ÄÇ",
      price: "15,400ÂÜÜ",
      features: ["Ë©≥Á¥∞Ë°ÄÊ∂≤Ê§úÊüª", "ËÉ∏ÈÉ®XÁ∑öÊ§úÊüª", "ÂøÉÈõªÂõ≥Ê§úÊüª", "ÂåªÂ∏´„Å´„Çà„ÇãÁµêÊûúË™¨Êòé", "ÂÅ•Â∫∑„Ç¢„Éâ„Éê„Ç§„Çπ"],
      popular: true,
    },
    {
      id: "fitness-program",
      title: "„Éë„Éº„ÇΩ„Éä„É´„Éï„Ç£„ÉÉ„Éà„Éç„Çπ‰ΩìÈ®ì",
      description: "Â∞ÇÂ±û„Éà„É¨„Éº„Éä„Éº„Å´„Çà„ÇãÂÄãÂà•„Éï„Ç£„ÉÉ„Éà„Éç„Çπ„Éó„É≠„Ç∞„É©„É†„ÅÆ‰ΩìÈ®ì„Ç≥„Éº„Çπ„Åß„Åô„ÄÇ",
      price: "12,100ÂÜÜ",
      features: ["„Éë„Éº„ÇΩ„Éä„É´„Éà„É¨„Éº„Éã„É≥„Ç∞Ôºà3ÂõûÔºâ", "‰ΩìÁµÑÊàêÊ∏¨ÂÆö", "ÈÅãÂãï„Éó„É≠„Ç∞„É©„É†‰ΩúÊàê", "Ê†ÑÈ§äÊåáÂ∞é"],
      popular: false,
    },
  ],
  high: [
    {
      id: "premium-dock",
      title: "„Éó„É¨„Éü„Ç¢„É†‰∫∫Èñì„Éâ„ÉÉ„ÇØ",
      description: "ÊúÄÊñ∞„ÅÆÂåªÁôÇÊ©üÂô®„Çí‰ΩøÁî®„Åó„ÅüÂåÖÊã¨ÁöÑ„Å™ÂÅ•Â∫∑Ë®∫Êñ≠„Éó„É≠„Ç∞„É©„É†„Åß„Åô„ÄÇ",
      price: "25,300ÂÜÜ",
      features: ["ÂÖ®Ë∫´MRIÊ§úÊüª", "Ë©≥Á¥∞Ë°ÄÊ∂≤Ê§úÊüª", "ÂÜÖË¶ñÈè°Ê§úÊüª", "Â∞ÇÈñÄÂåª„Å´„Çà„ÇãË®∫ÂØü", "ÂÅ•Â∫∑ÁÆ°ÁêÜ„Éó„É©„É≥"],
      popular: true,
    },
    {
      id: "holistic-wellness",
      title: "„Éõ„É™„Çπ„ÉÜ„Ç£„ÉÉ„ÇØ„Éª„Ç¶„Çß„É´„Éç„Çπ‰ΩìÈ®ì",
      description: "ÂøÉ„Å®‰Ωì„ÅÆ‰∏°Èù¢„Åã„Çâ„Ç¢„Éó„É≠„Éº„ÉÅ„Åô„ÇãÁ∑èÂêàÁöÑ„Å™„Ç¶„Çß„É´„Éç„Çπ„Éó„É≠„Ç∞„É©„É†„Åß„Åô„ÄÇ",
      price: "22,000ÂÜÜ",
      features: ["„É®„Ç¨„ÉªÁûëÊÉ≥„Çª„ÉÉ„Ç∑„Éß„É≥", "Ê†ÑÈ§ä„Ç´„Ç¶„É≥„Çª„É™„É≥„Ç∞", "„Ç¢„É≠„Éû„Çª„É©„Éî„Éº", "„Çπ„Éà„É¨„ÇπÊ∏¨ÂÆö", "„É©„Ç§„Éï„Çπ„Çø„Ç§„É´ÊèêÊ°à"],
      popular: false,
    },
  ],
  premium: [
    {
      id: "executive-checkup",
      title: "„Ç®„Ç∞„Çº„ÇØ„ÉÜ„Ç£„ÉñÂÅ•Â∫∑Ë®∫Êñ≠",
      description: "VIPÂæÖÈÅá„ÅßÂèó„Åë„Çâ„Çå„ÇãÊúÄÈ´òÁ¥ö„ÅÆÂÅ•Â∫∑Ë®∫Êñ≠„Éó„É≠„Ç∞„É©„É†„Åß„Åô„ÄÇ",
      price: "38,500ÂÜÜ",
      features: ["ÂÖ®Ë∫´Á≤æÂØÜÊ§úÊüª", "VIPÂÄãÂÆ§Âà©Áî®", "Â∞ÇÂ±ûÂåªÂ∏´„Å´„Çà„ÇãË®∫ÂØü", "Âç≥Êó•ÁµêÊûúË™¨Êòé", "1Âπ¥ÈñìÂÅ•Â∫∑„Çµ„Éù„Éº„Éà"],
      popular: true,
    },
    {
      id: "luxury-spa-wellness",
      title: "„É©„Ç∞„Ç∏„É•„Ç¢„É™„Éº„Éª„Çπ„ÉëÔºÜ„Ç¶„Çß„É´„Éç„Çπ",
      description: "È´òÁ¥ö„Çπ„Éë„Åß„ÅÆÁôí„Åó„Å®ÂÅ•Â∫∑„ÉÅ„Çß„ÉÉ„ÇØ„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„ÅüË¥ÖÊ≤¢„Å™„Éó„É≠„Ç∞„É©„É†„Åß„Åô„ÄÇ",
      price: "33,000ÂÜÜ",
      features: ["È´òÁ¥ö„Çπ„ÉëÂà©Áî®", "ÂÅ•Â∫∑Ë®∫Êñ≠", "„Ç®„Çπ„ÉÜ„ÉÜ„Ç£„ÉÉ„ÇØ", "Ê†ÑÈ§äÊåáÂ∞é", "„É™„É©„ÇØ„Çº„Éº„Ç∑„Éß„É≥"],
      popular: false,
    },
  ],
}

// ÂÆâÂÖ®„Å™ÁîªÈù¢ÈÅ∑ÁßªÈñ¢Êï∞
function showScreen(screenId) {
  try {
    const screens = document.querySelectorAll(".screen")
    screens.forEach((screen) => {
      screen.classList.remove("active")
    })

    const targetScreen = document.getElementById(screenId)
    if (targetScreen) {
      targetScreen.classList.add("active")
      window.appState.currentScreen = screenId
    } else {
      console.warn(`Screen with id "${screenId}" not found`)
    }
  } catch (error) {
    console.error("Error in showScreen:", error)
  }
}

function goHome() {
  try {
    if (window.location.pathname.includes("index.html") || window.location.pathname === "/") {
      showScreen("home-screen")
    } else {
      window.location.href = "index.html"
    }
    resetApp()
  } catch (error) {
    console.error("Error in goHome:", error)
  }
}

function resetApp() {
  try {
    window.appState.currentQuestion = 0
    window.appState.answers = {}
    window.appState.selectedGift = null
    window.appState.recipientInfo = {}
    window.appState.giftId = null
    window.appState.selectedPaymentMethod = null
  } catch (error) {
    console.error("Error in resetApp:", error)
  }
}

// „ÇÆ„Éï„ÉàÁõ∏Ë´áÈñãÂßã
function startGiftConsultation() {
  try {
    if (window.location.pathname.includes("index.html") || window.location.pathname === "/") {
      showScreen("question-screen")
      window.appState.currentQuestion = 0
      showQuestion()
    } else {
      window.location.href = "index.html#consultation"
    }
  } catch (error) {
    console.error("Error in startGiftConsultation:", error)
  }
}

// Ë≥™ÂïèË°®Á§∫
function showQuestion() {
  try {
    const question = questions[window.appState.currentQuestion]
    const progressPercent = ((window.appState.currentQuestion + 1) / questions.length) * 100

    const progressFill = document.getElementById("progress-fill")
    const currentQuestionSpan = document.getElementById("current-question")

    if (progressFill) progressFill.style.width = progressPercent + "%"
    if (currentQuestionSpan) currentQuestionSpan.textContent = window.appState.currentQuestion + 1

    const questionContent = document.getElementById("question-content")
    if (questionContent) {
      questionContent.innerHTML = `
        <h3 class="question-title">${question.title}</h3>
        <div class="question-options">
          ${question.options
            .map(
              (option) => `
            <button class="option-button" onclick="selectOption('${question.id}', '${option.value}')">
              <span style="font-size: 1.5rem; margin-right: 10px;">${option.icon}</span>
              ${option.label}
            </button>
          `,
            )
            .join("")}
        </div>
      `
    }

    updateNextButton()
  } catch (error) {
    console.error("Error in showQuestion:", error)
  }
}

// ÈÅ∏ÊäûËÇ¢ÈÅ∏Êäû
function selectOption(questionId, value) {
  try {
    window.appState.answers[questionId] = value

    // ÈÅ∏ÊäûÁä∂ÊÖã„ÅÆÊõ¥Êñ∞
    document.querySelectorAll(".option-button").forEach((btn) => {
      btn.classList.remove("selected")
    })

    if (event && event.target) {
      event.target.classList.add("selected")
    }

    updateNextButton()
  } catch (error) {
    console.error("Error in selectOption:", error)
  }
}

// Ê¨°„Å∏„Éú„Çø„É≥„ÅÆÁä∂ÊÖãÊõ¥Êñ∞
function updateNextButton() {
  try {
    const currentQuestion = questions[window.appState.currentQuestion]
    const hasAnswer = window.appState.answers[currentQuestion.id]
    const nextButton = document.getElementById("next-button")

    if (nextButton) {
      nextButton.disabled = !hasAnswer
    }
  } catch (error) {
    console.error("Error in updateNextButton:", error)
  }
}

// Ê¨°„ÅÆË≥™Âïè„Å∏
function nextQuestion() {
  try {
    if (window.appState.currentQuestion < questions.length - 1) {
      window.appState.currentQuestion++
      showQuestion()
    } else {
      showGiftProposals()
    }
  } catch (error) {
    console.error("Error in nextQuestion:", error)
  }
}

// „ÇÆ„Éï„ÉàÊèêÊ°àË°®Á§∫
function showGiftProposals() {
  try {
    showScreen("proposal-screen")

    const budget = window.appState.answers.budget
    const gifts = giftOptions[budget] || giftOptions["medium"]

    const giftOptionsContainer = document.getElementById("gift-options")
    if (giftOptionsContainer) {
      giftOptionsContainer.innerHTML = gifts
        .map(
          (gift) => `
          <div class="gift-option ${gift.popular ? "popular" : ""}" onclick="selectGiftOption('${gift.id}')">
            <h3 class="gift-title">${gift.title}</h3>
            <p class="gift-description">${gift.description}</p>
            <div class="gift-price">${gift.price}</div>
            <ul class="gift-features">
              ${gift.features.map((feature) => `<li>${feature}</li>`).join("")}
            </ul>
          </div>
        `,
        )
        .join("")
    }

    updateSelectButton()
  } catch (error) {
    console.error("Error in showGiftProposals:", error)
  }
}

// „ÇÆ„Éï„ÉàÈÅ∏Êäû
function selectGiftOption(giftId) {
  try {
    const budget = window.appState.answers.budget
    const gifts = giftOptions[budget] || giftOptions["medium"]
    window.appState.selectedGift = gifts.find((gift) => gift.id === giftId)

    // ÈÅ∏ÊäûÁä∂ÊÖã„ÅÆÊõ¥Êñ∞
    document.querySelectorAll(".gift-option").forEach((option) => {
      option.classList.remove("selected")
    })

    if (event && event.target) {
      event.target.classList.add("selected")
    }

    updateSelectButton()
  } catch (error) {
    console.error("Error in selectGiftOption:", error)
  }
}

// „ÇÆ„Éï„ÉàÈÅ∏Êäû„Éú„Çø„É≥„ÅÆÁä∂ÊÖãÊõ¥Êñ∞
function updateSelectButton() {
  try {
    const selectButton = document.getElementById("select-gift-button")
    if (selectButton) {
      selectButton.disabled = !window.appState.selectedGift
    }
  } catch (error) {
    console.error("Error in updateSelectButton:", error)
  }
}

// „ÇÆ„Éï„ÉàÈÅ∏ÊäûÂÆå‰∫Ü
function selectGift() {
  try {
    if (window.appState.selectedGift) {
      showScreen("recipient-screen")
    }
  } catch (error) {
    console.error("Error in selectGift:", error)
  }
}

// „É°„ÉÉ„Çª„Éº„Ç∏„ÉÜ„É≥„Éó„É¨„Éº„ÉàË®≠ÂÆö
function setMessage(message) {
  try {
    const messageInput = document.getElementById("gift-message")
    if (messageInput) {
      messageInput.value = message
    }
  } catch (error) {
    console.error("Error in setMessage:", error)
  }
}

// „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Èñ¢Êï∞
function showGiftList() {
  try {
    if (window.location.pathname.includes("gift-list.html")) {
      return
    }
    window.location.href = "gift-list.html"
  } catch (error) {
    console.error("Error in showGiftList:", error)
  }
}

function showServiceInfo() {
  try {
    if (window.location.pathname.includes("service-info.html")) {
      return
    }
    window.location.href = "service-info.html"
  } catch (error) {
    console.error("Error in showServiceInfo:", error)
  }
}

function showAdminLogin() {
  try {
    if (window.location.pathname.includes("admin.html")) {
      return
    }
    window.location.href = "admin.html"
  } catch (error) {
    console.error("Error in showAdminLogin:", error)
  }
}

// ÂÆâÂÖ®„Å™„ÇØ„É™„ÉÉ„Éó„Éú„Éº„ÉâÊìç‰Ωú
function copyGiftUrl() {
  try {
    const giftUrlInput = document.getElementById("gift-url")
    if (!giftUrlInput) return

    if (navigator.clipboard && window.isSecureContext) {
      navigator.clipboard
        .writeText(giftUrlInput.value)
        .then(() => showCopySuccess())
        .catch(() => fallbackCopyTextToClipboard(giftUrlInput.value))
    } else {
      fallbackCopyTextToClipboard(giftUrlInput.value)
    }
  } catch (error) {
    console.error("Error in copyGiftUrl:", error)
  }
}

function fallbackCopyTextToClipboard(text) {
  try {
    const textArea = document.createElement("textarea")
    textArea.value = text
    textArea.style.position = "fixed"
    textArea.style.left = "-999999px"
    textArea.style.top = "-999999px"
    document.body.appendChild(textArea)
    textArea.focus()
    textArea.select()

    let successful = false
    try {
      if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
        successful = document.execCommand("copy")
      }
      if (successful) {
        showCopySuccess()
      }
    } catch (err) {
      console.error("„Ç≥„Éî„Éº„Å´Â§±Êïó„Åó„Åæ„Åó„Åü:", err)
    }

    document.body.removeChild(textArea)
  } catch (error) {
    console.error("Error in fallbackCopyTextToClipboard:", error)
  }
}

function showCopySuccess() {
  try {
    const copyButton = document.querySelector(".copy-button")
    if (copyButton) {
      const originalText = copyButton.textContent
      copyButton.textContent = "„Ç≥„Éî„ÉºÂÆå‰∫ÜÔºÅ"
      copyButton.style.background = "#4caf50"

      setTimeout(() => {
        copyButton.textContent = originalText
        copyButton.style.background = ""
      }, 2000)
    }
  } catch (error) {
    console.error("Error in showCopySuccess:", error)
  }
}

// SNSÂÖ±Êúâ
function shareToLine() {
  try {
    const giftUrl = document.getElementById("gift-url").value
    const message = `ÂÅ•Â∫∑„ÅÆ„ÇÆ„Éï„Éà„ÅåÂ±ä„Åç„Åæ„Åó„ÅüÔºÅ ${giftUrl}`
    const lineUrl = `https://line.me/R/msg/text/?${encodeURIComponent(message)}`
    window.open(lineUrl, "_blank")
  } catch (error) {
    console.error("Error in shareToLine:", error)
  }
}

function shareToEmail() {
  try {
    const giftUrl = document.getElementById("gift-url").value
    const subject = "ÂÅ•Â∫∑„ÅÆ„ÇÆ„Éï„Éà„ÅåÂ±ä„Åç„Åæ„Åó„Åü"
    const body = `${window.appState.recipientInfo.recipientName}Êßò\n\n${window.appState.recipientInfo.senderName}Êßò„Åã„ÇâÂÅ•Â∫∑„ÅÆ„ÇÆ„Éï„Éà„ÅåÂ±ä„Åç„Åæ„Åó„Åü„ÄÇ\n\n${giftUrl}\n\n„Åú„Å≤„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ`
    const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`
    window.location.href = mailtoUrl
  } catch (error) {
    console.error("Error in shareToEmail:", error)
  }
}

// ÂàùÊúüÂåñÂá¶ÁêÜ
document.addEventListener("DOMContentLoaded", () => {
  try {
    console.log("DOM loaded, initializing app...")

    // URL„Éë„É©„É°„Éº„Çø„Åã„Çâ„ÇÆ„Éï„ÉàID„ÇíÂèñÂæó
    const urlParams = new URLSearchParams(window.location.search)
    const giftId = urlParams.get("gift")

    console.log("Gift ID from URL:", giftId)

    // URL„Éè„ÉÉ„Ç∑„É•„Çí„ÉÅ„Çß„ÉÉ„ÇØ
    const hash = window.location.hash.substring(1)

    // „É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„Åã„Çâ„ÇÆ„Éï„ÉàÈÅ∏Êäû„Çí„ÉÅ„Çß„ÉÉ„ÇØ
    const selectedGiftFromList = getSelectedGiftFromStorage()

    if (giftId) {
      // „ÇÆ„Éï„ÉàË°®Á§∫ÁîªÈù¢„ÇíË°®Á§∫
      console.log("Displaying gift:", giftId)
      displayGift(giftId)
    } else if (selectedGiftFromList) {
      // „ÇÆ„Éï„Éà‰∏ÄË¶ß„Åã„ÇâÈÅ∏Êäû„Åï„Çå„Åü„ÇÆ„Éï„Éà„ÇíÂá¶ÁêÜ
      window.appState.selectedGift = selectedGiftFromList
      showScreen("recipient-screen")
      clearSelectedGiftFromStorage()
    } else if (hash === "recipient" && window.appState && window.appState.selectedGift) {
      // „ÇÆ„Éï„Éà‰∏ÄË¶ß„Åã„ÇâÊàª„Å£„Å¶„Åç„ÅüÂ†¥Âêà
      showScreen("recipient-screen")
    } else if (hash === "consultation") {
      // Áõ∏Ë´áÈñãÂßã
      showScreen("question-screen")
      window.appState.currentQuestion = 0
      showQuestion()
    } else {
      // „Éõ„Éº„É†ÁîªÈù¢„ÇíË°®Á§∫
      const homeScreen = document.getElementById("home-screen")
      if (homeScreen) {
        showScreen("home-screen")
      }
    }

    // „Éï„Ç©„Éº„É†„Ç§„Éô„É≥„Éà„É™„Çπ„Éä„Éº„ÅÆË®≠ÂÆö
    const recipientForm = document.getElementById("recipient-form")
    if (recipientForm) {
      recipientForm.addEventListener("submit", (e) => {
        e.preventDefault()

        try {
          const formData = new FormData(recipientForm)
          window.appState.recipientInfo = {
            recipientName: formData.get("recipientName"),
            senderName: formData.get("senderName"),
            giftMessage: formData.get("giftMessage"),
          }

          showPaymentScreen()
        } catch (error) {
          console.error("Error in form submission:", error)
        }
      })
    }
  } catch (error) {
    console.error("Error during initialization:", error)
  }
})

// „É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„Åã„Çâ„ÇÆ„Éï„ÉàÈÅ∏Êäû„ÇíÂèñÂæó„Åô„ÇãÈñ¢Êï∞„ÇíËøΩÂä†
function getSelectedGiftFromStorage() {
  try {
    const storedGift = localStorage.getItem("selectedGift")
    if (storedGift) {
      return JSON.parse(storedGift)
    }
    return null
  } catch (error) {
    console.warn("Error reading from localStorage:", error)
    return null
  }
}

// „É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„Åã„Çâ„ÇÆ„Éï„ÉàÈÅ∏Êäû„Çí„ÇØ„É™„Ç¢„Åô„ÇãÈñ¢Êï∞„ÇíËøΩÂä†
function clearSelectedGiftFromStorage() {
  try {
    localStorage.removeItem("selectedGift")
  } catch (error) {
    console.warn("Error clearing localStorage:", error)
  }
}

// Ê±∫Ê∏àÈñ¢ÈÄ£„ÅÆÈñ¢Êï∞
function selectPaymentMethod(method) {
  try {
    window.appState.selectedPaymentMethod = method

    // ÈÅ∏ÊäûÁä∂ÊÖã„ÅÆÊõ¥Êñ∞
    document.querySelectorAll(".payment-method").forEach((element) => {
      element.classList.remove("selected")
    })

    if (event && event.target) {
      event.target.closest(".payment-method").classList.add("selected")
    }

    updatePaymentButton()
  } catch (error) {
    console.error("Error in selectPaymentMethod:", error)
  }
}

function updatePaymentButton() {
  try {
    const paymentButton = document.getElementById("payment-button")
    if (!paymentButton) return

    if (window.appState.selectedPaymentMethod === "paypay") {
      paymentButton.textContent = "PayPay„ÅßÊ±∫Ê∏à„Åô„Çã"
      paymentButton.disabled = false
      paymentButton.className = "payment-button paypay"
    } else if (window.appState.selectedPaymentMethod === "card") {
      paymentButton.textContent = "„ÇØ„É¨„Ç∏„ÉÉ„Éà„Ç´„Éº„Éâ„ÅßÊ±∫Ê∏à„Åô„Çã"
      paymentButton.disabled = false
      paymentButton.className = "payment-button"
    } else {
      paymentButton.textContent = "Ê±∫Ê∏àÊñπÊ≥ï„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
      paymentButton.disabled = true
      paymentButton.className = "payment-button"
    }
  } catch (error) {
    console.error("Error in updatePaymentButton:", error)
  }
}

function showPaymentScreen() {
  try {
    showScreen("payment-screen")

    const orderSummary = document.getElementById("order-summary")
    if (orderSummary && window.appState.selectedGift && window.appState.recipientInfo) {
      orderSummary.innerHTML = `
        <h3>„ÅîÊ≥®ÊñáÂÜÖÂÆπ</h3>
        <div class="order-item">
          <span>ÂïÜÂìÅÂêç</span>
          <span>${window.appState.selectedGift.title}</span>
        </div>
        <div class="order-item">
          <span>ÂèóÂèñ‰∫∫</span>
          <span>${window.appState.recipientInfo.recipientName}Êßò</span>
        </div>
        <div class="order-item">
          <span>ÂêàË®àÈáëÈ°ç</span>
          <span>${window.appState.selectedGift.price}</span>
        </div>
      `
    }

    updatePaymentButton()
  } catch (error) {
    console.error("Error in showPaymentScreen:", error)
  }
}

function processPayment() {
  try {
    if (!window.appState.selectedPaymentMethod) {
      alert("Ê±∫Ê∏àÊñπÊ≥ï„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ")
      return
    }

    let processingMessage = ""
    if (window.appState.selectedPaymentMethod === "paypay") {
      processingMessage = "PayPay„ÅßÊ±∫Ê∏à‰∏≠..."
    } else {
      processingMessage = "„ÇØ„É¨„Ç∏„ÉÉ„Éà„Ç´„Éº„Éâ„ÅßÊ±∫Ê∏à‰∏≠..."
    }

    // Ê±∫Ê∏àÂá¶ÁêÜ‰∏≠„ÅÆË°®Á§∫
    const paymentButton = document.getElementById("payment-button")
    if (paymentButton) {
      paymentButton.textContent = processingMessage
      paymentButton.disabled = true
    }

    // „ÉÄ„Éü„Éº„ÅÆÊ±∫Ê∏àÂá¶ÁêÜ
    setTimeout(() => {
      window.appState.giftId = generateGiftId()
      showCompletionScreen()
    }, 2000)
  } catch (error) {
    console.error("Error in processPayment:", error)
  }
}

function generateGiftId() {
  return "gift_" + Math.random().toString(36).substr(2, 9)
}

function showCompletionScreen() {
  try {
    showScreen("completion-screen")

    const completionMessage = document.getElementById("completion-message")
    if (completionMessage && window.appState.recipientInfo) {
      completionMessage.innerHTML = `
        ${window.appState.recipientInfo.recipientName}Êßò„Å∏„ÄÅÂÅ•Â∫∑„ÅÆGIFT„ÅåÂ±ä„Åç„Åæ„Åó„ÅüÔºÅ<br>
        Â§ßÂàá„Å™‰∫∫„Å∏„ÄÅ„ÅÇ„Å™„Åü„ÅÆÊÉ≥„ÅÑ„ÅåÂ±ä„Åç„Åæ„Åô„Çà„ÅÜ„Å´„ÄÇ
      `
    }

    const giftUrl = `${window.location.origin}${window.location.pathname}?gift=${window.appState.giftId}`
    const giftUrlInput = document.getElementById("gift-url")
    if (giftUrlInput) {
      giftUrlInput.value = giftUrl
    }
  } catch (error) {
    console.error("Error in showCompletionScreen:", error)
  }
}

// „ÇÆ„Éï„ÉàË°®Á§∫Èñ¢Êï∞„Çí‰øÆÊ≠£
function displayGift(giftId) {
  try {
    console.log("Attempting to display gift:", giftId)

    // „ÇÆ„Éï„Éà„Éá„Éº„Çø„ÇíÂèñÂæóÔºàÂÆüÈöõ„ÅÆÂÆüË£Ö„Åß„ÅØ„Çµ„Éº„Éê„Éº„Åã„ÇâÂèñÂæóÔºâ
    const giftData = getGiftDataById(giftId)

    console.log("Gift data found:", giftData)

    if (giftData) {
      showScreen("gift-receive-screen")
      showGiftReceiveAnimation(giftData)
    } else {
      console.warn(`Gift with id "${giftId}" not found, showing default gift`)
      // „ÇÆ„Éï„Éà„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑÂ†¥Âêà„ÅØ„Éá„Éï„Ç©„É´„Éà„ÇÆ„Éï„Éà„ÇíË°®Á§∫
      const defaultGift = createDefaultGift(giftId)
      showScreen("gift-receive-screen")
      showGiftReceiveAnimation(defaultGift)
    }
  } catch (error) {
    console.error("Error in displayGift:", error)
    // „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„ÅüÂ†¥Âêà„ÇÇ„Éá„Éï„Ç©„É´„Éà„ÇÆ„Éï„Éà„ÇíË°®Á§∫
    const defaultGift = createDefaultGift(giftId)
    showScreen("gift-receive-screen")
    showGiftReceiveAnimation(defaultGift)
  }
}

// „Éá„Éï„Ç©„É´„Éà„ÇÆ„Éï„Éà‰ΩúÊàêÈñ¢Êï∞„ÇíËøΩÂä†
function createDefaultGift(giftId) {
  return {
    id: giftId,
    name: "Á∑èÂêàÂÅ•Â∫∑Ë®∫Êñ≠„Éë„ÉÉ„ÇØ",
    category: "checkup",
    price: 15400,
    description: "Ë©≥Á¥∞„Å™Ë°ÄÊ∂≤Ê§úÊüª„Åã„ÇâÁîªÂÉèË®∫Êñ≠„Åæ„Åß„ÄÅÁ∑èÂêàÁöÑ„Å™ÂÅ•Â∫∑Áä∂ÊÖã„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åß„Åç„Åæ„Åô„ÄÇ",
    features: ["Ë©≥Á¥∞Ë°ÄÊ∂≤Ê§úÊüª", "ËÉ∏ÈÉ®XÁ∑öÊ§úÊüª", "ÂøÉÈõªÂõ≥Ê§úÊüª", "ÂåªÂ∏´„Å´„Çà„ÇãÁµêÊûúË™¨Êòé", "ÂÅ•Â∫∑„Ç¢„Éâ„Éê„Ç§„Çπ"],
    partner: "ÂÅ•Â∫∑„ÇØ„É™„Éã„ÉÉ„ÇØÊù±‰∫¨",
    icon: "üè•",
    senderName: "Â§ßÂàá„Å™‰∫∫",
    recipientName: "„ÅÇ„Å™„Åü",
    message: "„ÅÑ„Å§„Åæ„Åß„ÇÇÂÅ•Â∫∑„Åß„ÅÑ„Å¶„Åª„Åó„ÅÑ„Å®„ÅÑ„ÅÜÊÉ≥„ÅÑ„ÇíËæº„ÇÅ„Å¶„ÄÅÂÅ•Â∫∑Ë®∫Êñ≠„ÅÆ„ÇÆ„Éï„Éà„ÇíË¥à„Çä„Åæ„Åô„ÄÇ„Åú„Å≤„ÅîÂà©Áî®„Åè„Å†„Åï„ÅÑ„ÄÇ",
    validUntil: "2024Âπ¥12Êúà31Êó•",
    status: "active",
  }
}

// „ÇÆ„Éï„Éà„Éá„Éº„ÇøÂèñÂæóÈñ¢Êï∞„ÇíÊã°Âºµ
function getGiftDataById(giftId) {
  console.log("Looking for gift data for ID:", giftId)

  // ÂÆüÈöõ„ÅÆÂÆüË£Ö„Åß„ÅØ„Çµ„Éº„Éê„ÉºAPI„Åã„ÇâÂèñÂæó
  // „Åì„Åì„Åß„ÅØ„ÉÄ„Éü„Éº„Éá„Éº„Çø„ÇíËøî„Åô
  const sampleGifts = {
    gift_abc123456: {
      id: "gift_abc123456",
      name: "Á∑èÂêàÂÅ•Â∫∑Ë®∫Êñ≠„Éë„ÉÉ„ÇØ",
      category: "checkup",
      price: 15400,
      description: "Ë©≥Á¥∞„Å™Ë°ÄÊ∂≤Ê§úÊüª„Åã„ÇâÁîªÂÉèË®∫Êñ≠„Åæ„Åß„ÄÅÁ∑èÂêàÁöÑ„Å™ÂÅ•Â∫∑Áä∂ÊÖã„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åß„Åç„Åæ„Åô„ÄÇ",
      features: ["Ë©≥Á¥∞Ë°ÄÊ∂≤Ê§úÊüª", "ËÉ∏ÈÉ®XÁ∑öÊ§úÊüª", "ÂøÉÈõªÂõ≥Ê§úÊüª", "ÂåªÂ∏´„Å´„Çà„ÇãÁµêÊûúË™¨Êòé", "ÂÅ•Â∫∑„Ç¢„Éâ„Éê„Ç§„Çπ"],
      partner: "ÂÅ•Â∫∑„ÇØ„É™„Éã„ÉÉ„ÇØÊù±‰∫¨",
      icon: "üè•",
      senderName: "Áî∞‰∏≠ Ëä±Â≠ê",
      recipientName: "Â±±Áî∞ Â§™ÈÉé",
      message:
        "„ÅäÁà∂„Åï„Çì„ÄÅ„ÅÑ„Å§„Åæ„Åß„ÇÇÂÅ•Â∫∑„Åß„ÅÑ„Å¶„Åª„Åó„ÅÑ„Åã„Çâ„ÄÇ„Å™„Åã„Å™„Åã‰∫àÁ¥Ñ„Åó„Å™„ÅÑ„Å†„Çç„ÅÜ„Å®ÊÄù„Å£„Å¶„ÄÅ‰∫∫Èñì„Éâ„ÉÉ„ÇØ„ÇíË¥à„Çã„Çà„ÄÇ„Åì„Çå„ÇíÊ©ü„Å´„Åó„Å£„Åã„ÇäË¶ã„Å¶„Åç„Å¶„Å≠ÔºÅ",
      validUntil: "2024Âπ¥12Êúà31Êó•",
      status: "active",
    },
    gift_def789012: {
      id: "gift_def789012",
      name: "„Éë„Éº„ÇΩ„Éä„É´„Éï„Ç£„ÉÉ„Éà„Éç„Çπ‰ΩìÈ®ì",
      category: "fitness",
      price: 12100,
      description: "Â∞ÇÂ±û„Éà„É¨„Éº„Éä„Éº„Å´„Çà„ÇãÂÄãÂà•„Éï„Ç£„ÉÉ„Éà„Éç„Çπ„Éó„É≠„Ç∞„É©„É†„ÅÆ‰ΩìÈ®ì„Ç≥„Éº„Çπ„Åß„Åô„ÄÇ",
      features: ["„Éë„Éº„ÇΩ„Éä„É´„Éà„É¨„Éº„Éã„É≥„Ç∞Ôºà3ÂõûÔºâ", "‰ΩìÁµÑÊàêÊ∏¨ÂÆö", "ÈÅãÂãï„Éó„É≠„Ç∞„É©„É†‰ΩúÊàê", "Ê†ÑÈ§äÊåáÂ∞é"],
      partner: "„Éï„Ç£„ÉÉ„Éà„Éç„Çπ„Ç∏„É†B",
      icon: "üí™",
      senderName: "‰ΩêËó§ ÁæéÂí≤",
      recipientName: "Èà¥Êú® ÊÅµÂ≠ê",
      message:
        "ÊÅµÂ≠ê„Å°„ÇÉ„Çì„ÄÅÂá∫Áî£„ÅäÁñ≤„ÇåÊßòÔºÅËÇ≤ÂÖê„ÅßÂøô„Åó„ÅÑ„Å®ÊÄù„ÅÜ„Åë„Å©„ÄÅËá™ÂàÜ„ÅÆ‰Ωì„ÇÇÂ§ßÂàá„Å´„Åó„Å¶„Åª„Åó„ÅÑ„Åã„Çâ„ÄÅËøëÊâÄ„ÅÆ„Éï„Ç£„ÉÉ„Éà„Éç„Çπ„Ç∏„É†„ÅÆ„ÉÅ„Ç±„ÉÉ„Éà„ÇíË¥à„Çã„Å≠„ÄÇÊ∞óÂàÜËª¢Êèõ„Å´„ÇÇ„Å™„Çã„Åó„ÄÅÊ∞óËªΩ„Å´Âà©Áî®„Åó„Å¶„Åø„Å¶ÔºÅ",
      validUntil: "2024Âπ¥10Êúà31Êó•",
      status: "active",
    },
    gift_m4n59rrb8: {
      id: "gift_m4n59rrb8",
      name: "„Ç¶„Çß„É´„Éç„ÇπÁõ∏Ë´á„Çª„ÉÉ„Ç∑„Éß„É≥",
      category: "wellness",
      price: 6600,
      description: "Â∞ÇÈñÄ„Ç´„Ç¶„É≥„Çª„É©„Éº„Å´„Çà„ÇãÂÅ•Â∫∑„ÉªÁîüÊ¥ªÁøíÊÖ£„ÅÆÂÄãÂà•Áõ∏Ë´á„Çª„ÉÉ„Ç∑„Éß„É≥„Åß„Åô„ÄÇ",
      features: ["ÂÄãÂà•Áõ∏Ë´áÔºà60ÂàÜÔºâ", "ÁîüÊ¥ªÁøíÊÖ£„Ç¢„Éâ„Éê„Ç§„Çπ", "„Éï„Ç©„É≠„Éº„Ç¢„ÉÉ„Éó„É°„Éº„É´", "ÂÅ•Â∫∑„Éó„É©„É≥‰ΩúÊàê"],
      partner: "„Ç¶„Çß„É´„Éç„Çπ„Çª„É≥„Çø„ÉºC",
      icon: "üßò",
      senderName: "È´òÊ©ã ÊÑõ",
      recipientName: "‰Ωê„ÄÖÊú® ÂÅ•",
      message:
        "ÂÅ•Â∫∑„Å´„Å§„ÅÑ„Å¶‰∏ÄÁ∑í„Å´ËÄÉ„Åà„ÇãÊôÇÈñì„Çí‰Ωú„Å£„Å¶„Åª„Åó„Åè„Å¶„ÄÅ„Ç¶„Çß„É´„Éç„ÇπÁõ∏Ë´á„ÅÆ„ÇÆ„Éï„Éà„ÇíË¥à„Çä„Åæ„Åô„ÄÇÂ∞ÇÈñÄÂÆ∂„ÅÆ„Ç¢„Éâ„Éê„Ç§„Çπ„ÇíÂèó„Åë„Å¶„ÄÅ„Çà„ÇäËâØ„ÅÑÁîüÊ¥ªÁøíÊÖ£„ÇíË∫´„Å´„Å§„Åë„Å¶„Åè„Å†„Åï„ÅÑ„Å≠„ÄÇ",
      validUntil: "2024Âπ¥11Êúà30Êó•",
      status: "active",
    },
  }

  const foundGift = sampleGifts[giftId]
  console.log("Found gift:", foundGift)

  return foundGift || null
}

// „ÇÆ„Éï„ÉàÂèóÂèñ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Ë°®Á§∫
function showGiftReceiveAnimation(giftData) {
  try {
    console.log("Showing gift receive animation for:", giftData)

    const openingAnimation = document.getElementById("gift-opening-receive")
    const contentDisplay = document.getElementById("gift-content-display")

    if (openingAnimation && contentDisplay) {
      // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Ë°®Á§∫
      openingAnimation.style.display = "block"
      contentDisplay.style.display = "none"

      // 3ÁßíÂæå„Å´„ÇÆ„Éï„ÉàÂÜÖÂÆπ„ÇíË°®Á§∫
      setTimeout(() => {
        openingAnimation.style.display = "none"
        contentDisplay.style.display = "block"
        populateGiftContent(giftData)
      }, 3000)
    } else {
      console.warn("Animation elements not found, showing content directly")
      // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Ë¶ÅÁ¥†„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑÂ†¥Âêà„ÅØÁõ¥Êé•„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíË°®Á§∫
      if (contentDisplay) {
        contentDisplay.style.display = "block"
        populateGiftContent(giftData)
      }
    }
  } catch (error) {
    console.error("Error in showGiftReceiveAnimation:", error)
  }
}

// „ÇÆ„Éï„ÉàÂÜÖÂÆπ„ÇíÁîªÈù¢„Å´Ë°®Á§∫
function populateGiftContent(giftData) {
  try {
    console.log("Populating gift content:", giftData)

    // ÈÄÅ„Çä‰∏ªÂêç
    const senderNameEl = document.getElementById("gift-sender-name")
    if (senderNameEl) senderNameEl.textContent = giftData.senderName

    // „É°„ÉÉ„Çª„Éº„Ç∏
    const messageEl = document.getElementById("gift-personal-message")
    if (messageEl) messageEl.textContent = giftData.message

    // „ÇÆ„Éï„ÉàË©≥Á¥∞
    const itemIconEl = document.getElementById("gift-item-icon")
    const itemNameEl = document.getElementById("gift-item-name")
    const itemCategoryEl = document.getElementById("gift-item-category")
    const itemPriceEl = document.getElementById("gift-item-price")
    const itemDescEl = document.getElementById("gift-item-desc")
    const partnerNameEl = document.getElementById("gift-item-partner-name")

    if (itemIconEl) itemIconEl.textContent = giftData.icon
    if (itemNameEl) itemNameEl.textContent = giftData.name
    if (itemCategoryEl) itemCategoryEl.textContent = getCategoryName(giftData.category)
    if (itemPriceEl) itemPriceEl.textContent = `¬•${giftData.price.toLocaleString()}`
    if (itemDescEl) itemDescEl.textContent = giftData.description
    if (partnerNameEl) partnerNameEl.textContent = giftData.partner

    // ÁâπÂæ¥„É™„Çπ„Éà
    const featuresListEl = document.getElementById("gift-item-features-list")
    if (featuresListEl && giftData.features) {
      featuresListEl.innerHTML = giftData.features.map((feature) => `<li>${feature}</li>`).join("")
    }

    // QR„Ç≥„Éº„Éâ
    const codeTextEl = document.getElementById("gift-code-text")
    if (codeTextEl) codeTextEl.textContent = giftData.id.toUpperCase()

    // ÊúâÂäπÊúüÈôê
    const validityDateEl = document.getElementById("gift-validity-date")
    if (validityDateEl) validityDateEl.textContent = `${giftData.validUntil}„Åæ„Åß`

    console.log("Gift content populated successfully")
  } catch (error) {
    console.error("Error in populateGiftContent:", error)
  }
}

// „Ç´„ÉÜ„Ç¥„É™„ÉºÂêçÂèñÂæóÈñ¢Êï∞„ÇíËøΩÂä†
function getCategoryName(category) {
  const categoryNames = {
    checkup: "ÂÅ•Â∫∑Ë®∫Êñ≠",
    fitness: "„Éï„Ç£„ÉÉ„Éà„Éç„Çπ",
    wellness: "„Ç¶„Çß„É´„Éç„Çπ",
    consultation: "Áõ∏Ë´á„ÉªÊåáÂ∞é",
  }
  return categoryNames[category] || category
}

// Âà©Áî®ÊñπÊ≥ïË©≥Á¥∞Ë°®Á§∫
function showUsageInstructions() {
  alert(
    "Âà©Áî®ÊñπÊ≥ï„ÅÆË©≥Á¥∞:\n\n1. ÊèêÊê∫ÊñΩË®≠„Å´ÈõªË©±„Åæ„Åü„ÅØWeb„Çµ„Ç§„Éà„Åã„Çâ‰∫àÁ¥Ñ„ÇíÂèñ„Å£„Å¶„Åè„Å†„Åï„ÅÑ\n2. Êù•Â∫óÊôÇ„Å´QR„Ç≥„Éº„Éâ„ÇíÊèêÁ§∫„Åó„Å¶„Åè„Å†„Åï„ÅÑ\n3. „Çπ„Çø„ÉÉ„Éï„ÅåQR„Ç≥„Éº„Éâ„ÇíÁ¢∫Ë™çÂæå„ÄÅ„Çµ„Éº„Éì„Çπ„ÇíÂèó„Åë„Çâ„Çå„Åæ„Åô\n\n‚Äª‰∫àÁ¥ÑÊôÇ„Å´„ÄåGIFT„ÇíÂà©Áî®„Äç„Å®„Åä‰ºù„Åà„Åè„Å†„Åï„ÅÑ",
  )
}

// „ÇÆ„Éï„ÉàÂÖ±ÊúâÊ©üËÉΩ
function shareGift() {
  try {
    const currentUrl = window.location.href

    if (navigator.share) {
      navigator.share({
        title: "GIFT - ÂÅ•Â∫∑„ÅÆ„ÇÆ„Éï„Éà„ÅåÂ±ä„Åç„Åæ„Åó„Åü",
        text: "ÂÅ•Â∫∑„ÅÆ„ÇÆ„Éï„Éà„ÇíÂèó„ÅëÂèñ„Çä„Åæ„Åó„ÅüÔºÅ",
        url: currentUrl,
      })
    } else {
      // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ: URL„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº
      if (navigator.clipboard) {
        navigator.clipboard.writeText(currentUrl).then(() => {
          alert("„ÇÆ„Éï„ÉàURL„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„ÅüÔºÅ")
        })
      } else {
        alert(`„ÇÆ„Éï„ÉàURL: ${currentUrl}`)
      }
    }
  } catch (error) {
    console.error("Error in shareGift:", error)
  }
}

console.log("Script.js loaded successfully")
