name: Deploy to Staging

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Run linting
        run: npm run lint
      
      - name: Run type checking
        run: npm run type-check

  build-staging:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        env:
          VITE_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
          VITE_APP_NAME: GIFTS (Staging)
          VITE_APP_VERSION: ${{ github.sha }}
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: staging-build
          path: dist/

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-staging
    environment: staging
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: staging-build
          path: dist/
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://${{ secrets.STAGING_S3_BUCKET }} --delete
      
      - name: Deploy Lambda functions (Staging)
        env:
          SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
          SUPABASE_SERVICE_KEY: ${{ secrets.STAGING_SUPABASE_SERVICE_KEY }}
          LINE_CHANNEL_SECRET: ${{ secrets.STAGING_LINE_CHANNEL_SECRET }}
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.STAGING_LINE_CHANNEL_ACCESS_TOKEN }}
        run: |
          cd aws-infrastructure
          npm install
          npm run build
          npx cdk deploy --require-approval never
      
      - name: Run E2E tests
        run: |
          echo "Running E2E tests against staging environment"
          # PlaywrightやCypressなどのE2Eテストを実行
      
      - name: Notify staging deployment
        if: success()
        run: |
          echo "Staging deployment completed successfully!"
          # Slack通知を追加可能 